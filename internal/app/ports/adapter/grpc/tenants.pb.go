// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tenants.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProvisionTenantRequest struct {
	TenantName         string         `protobuf:"bytes,1,opt,name=tenant_name,json=tenantName" json:"tenant_name,omitempty"`
	TenantDescription  string         `protobuf:"bytes,2,opt,name=tenant_description,json=tenantDescription" json:"tenant_description,omitempty"`
	AdministratorName  *FullName      `protobuf:"bytes,3,opt,name=administrator_name,json=administratorName" json:"administrator_name,omitempty"`
	EmailAddress       string         `protobuf:"bytes,4,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	PostalAddress      *PostalAddress `protobuf:"bytes,5,opt,name=postal_address,json=postalAddress" json:"postal_address,omitempty"`
	PrimaryTelephone   string         `protobuf:"bytes,6,opt,name=primary_telephone,json=primaryTelephone" json:"primary_telephone,omitempty"`
	SecondaryTelephone string         `protobuf:"bytes,7,opt,name=secondary_telephone,json=secondaryTelephone" json:"secondary_telephone,omitempty"`
}

func (m *ProvisionTenantRequest) Reset()                    { *m = ProvisionTenantRequest{} }
func (m *ProvisionTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*ProvisionTenantRequest) ProtoMessage()               {}
func (*ProvisionTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ProvisionTenantRequest) GetTenantName() string {
	if m != nil {
		return m.TenantName
	}
	return ""
}

func (m *ProvisionTenantRequest) GetTenantDescription() string {
	if m != nil {
		return m.TenantDescription
	}
	return ""
}

func (m *ProvisionTenantRequest) GetAdministratorName() *FullName {
	if m != nil {
		return m.AdministratorName
	}
	return nil
}

func (m *ProvisionTenantRequest) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *ProvisionTenantRequest) GetPostalAddress() *PostalAddress {
	if m != nil {
		return m.PostalAddress
	}
	return nil
}

func (m *ProvisionTenantRequest) GetPrimaryTelephone() string {
	if m != nil {
		return m.PrimaryTelephone
	}
	return ""
}

func (m *ProvisionTenantRequest) GetSecondaryTelephone() string {
	if m != nil {
		return m.SecondaryTelephone
	}
	return ""
}

type ProvisionTenantResponse struct {
	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
}

func (m *ProvisionTenantResponse) Reset()                    { *m = ProvisionTenantResponse{} }
func (m *ProvisionTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*ProvisionTenantResponse) ProtoMessage()               {}
func (*ProvisionTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ProvisionTenantResponse) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

type ActivateTenantRequest struct {
	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
}

func (m *ActivateTenantRequest) Reset()                    { *m = ActivateTenantRequest{} }
func (m *ActivateTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*ActivateTenantRequest) ProtoMessage()               {}
func (*ActivateTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ActivateTenantRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

type ActivateTenantResponse struct {
	Activated bool `protobuf:"varint,1,opt,name=activated" json:"activated,omitempty"`
}

func (m *ActivateTenantResponse) Reset()                    { *m = ActivateTenantResponse{} }
func (m *ActivateTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivateTenantResponse) ProtoMessage()               {}
func (*ActivateTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ActivateTenantResponse) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

type DeactivateTenantRequest struct {
	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
}

func (m *DeactivateTenantRequest) Reset()                    { *m = DeactivateTenantRequest{} }
func (m *DeactivateTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*DeactivateTenantRequest) ProtoMessage()               {}
func (*DeactivateTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *DeactivateTenantRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

type DeactivateTenantResponse struct {
	Deactivated bool `protobuf:"varint,1,opt,name=deactivated" json:"deactivated,omitempty"`
}

func (m *DeactivateTenantResponse) Reset()                    { *m = DeactivateTenantResponse{} }
func (m *DeactivateTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*DeactivateTenantResponse) ProtoMessage()               {}
func (*DeactivateTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *DeactivateTenantResponse) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

type OfferInvitationRequest struct {
	TenantId    string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	StartDate   int64  `protobuf:"varint,3,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	EndDate     int64  `protobuf:"varint,4,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
}

func (m *OfferInvitationRequest) Reset()                    { *m = OfferInvitationRequest{} }
func (m *OfferInvitationRequest) String() string            { return proto.CompactTextString(m) }
func (*OfferInvitationRequest) ProtoMessage()               {}
func (*OfferInvitationRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *OfferInvitationRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *OfferInvitationRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OfferInvitationRequest) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *OfferInvitationRequest) GetEndDate() int64 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

type OfferInvitationResponse struct {
	InvitationId string `protobuf:"bytes,1,opt,name=invitation_id,json=invitationId" json:"invitation_id,omitempty"`
}

func (m *OfferInvitationResponse) Reset()                    { *m = OfferInvitationResponse{} }
func (m *OfferInvitationResponse) String() string            { return proto.CompactTextString(m) }
func (*OfferInvitationResponse) ProtoMessage()               {}
func (*OfferInvitationResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *OfferInvitationResponse) GetInvitationId() string {
	if m != nil {
		return m.InvitationId
	}
	return ""
}

type WithdrawInvitationRequest struct {
	TenantId     string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	InvitationId string `protobuf:"bytes,2,opt,name=invitation_id,json=invitationId" json:"invitation_id,omitempty"`
}

func (m *WithdrawInvitationRequest) Reset()                    { *m = WithdrawInvitationRequest{} }
func (m *WithdrawInvitationRequest) String() string            { return proto.CompactTextString(m) }
func (*WithdrawInvitationRequest) ProtoMessage()               {}
func (*WithdrawInvitationRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *WithdrawInvitationRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *WithdrawInvitationRequest) GetInvitationId() string {
	if m != nil {
		return m.InvitationId
	}
	return ""
}

type WithdrawInvitationResponse struct {
	Withdrawn bool `protobuf:"varint,1,opt,name=withdrawn" json:"withdrawn,omitempty"`
}

func (m *WithdrawInvitationResponse) Reset()                    { *m = WithdrawInvitationResponse{} }
func (m *WithdrawInvitationResponse) String() string            { return proto.CompactTextString(m) }
func (*WithdrawInvitationResponse) ProtoMessage()               {}
func (*WithdrawInvitationResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *WithdrawInvitationResponse) GetWithdrawn() bool {
	if m != nil {
		return m.Withdrawn
	}
	return false
}

type FullName struct {
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
}

func (m *FullName) Reset()                    { *m = FullName{} }
func (m *FullName) String() string            { return proto.CompactTextString(m) }
func (*FullName) ProtoMessage()               {}
func (*FullName) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *FullName) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *FullName) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type PostalAddress struct {
	StreetName     string `protobuf:"bytes,1,opt,name=street_name,json=streetName" json:"street_name,omitempty"`
	BuildingNumber string `protobuf:"bytes,2,opt,name=building_number,json=buildingNumber" json:"building_number,omitempty"`
	PostalCode     string `protobuf:"bytes,3,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Town           string `protobuf:"bytes,4,opt,name=town" json:"town,omitempty"`
	StateProvince  string `protobuf:"bytes,5,opt,name=state_province,json=stateProvince" json:"state_province,omitempty"`
	CountryCode    string `protobuf:"bytes,6,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
}

func (m *PostalAddress) Reset()                    { *m = PostalAddress{} }
func (m *PostalAddress) String() string            { return proto.CompactTextString(m) }
func (*PostalAddress) ProtoMessage()               {}
func (*PostalAddress) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *PostalAddress) GetStreetName() string {
	if m != nil {
		return m.StreetName
	}
	return ""
}

func (m *PostalAddress) GetBuildingNumber() string {
	if m != nil {
		return m.BuildingNumber
	}
	return ""
}

func (m *PostalAddress) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *PostalAddress) GetTown() string {
	if m != nil {
		return m.Town
	}
	return ""
}

func (m *PostalAddress) GetStateProvince() string {
	if m != nil {
		return m.StateProvince
	}
	return ""
}

func (m *PostalAddress) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func init() {
	proto.RegisterType((*ProvisionTenantRequest)(nil), "iam.ProvisionTenantRequest")
	proto.RegisterType((*ProvisionTenantResponse)(nil), "iam.ProvisionTenantResponse")
	proto.RegisterType((*ActivateTenantRequest)(nil), "iam.ActivateTenantRequest")
	proto.RegisterType((*ActivateTenantResponse)(nil), "iam.ActivateTenantResponse")
	proto.RegisterType((*DeactivateTenantRequest)(nil), "iam.DeactivateTenantRequest")
	proto.RegisterType((*DeactivateTenantResponse)(nil), "iam.DeactivateTenantResponse")
	proto.RegisterType((*OfferInvitationRequest)(nil), "iam.OfferInvitationRequest")
	proto.RegisterType((*OfferInvitationResponse)(nil), "iam.OfferInvitationResponse")
	proto.RegisterType((*WithdrawInvitationRequest)(nil), "iam.WithdrawInvitationRequest")
	proto.RegisterType((*WithdrawInvitationResponse)(nil), "iam.WithdrawInvitationResponse")
	proto.RegisterType((*FullName)(nil), "iam.FullName")
	proto.RegisterType((*PostalAddress)(nil), "iam.PostalAddress")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for TenantService service

type TenantServiceClient interface {
	ProvisionTenant(ctx context.Context, in *ProvisionTenantRequest, opts ...grpc1.CallOption) (*ProvisionTenantResponse, error)
	ActivateTenant(ctx context.Context, in *ActivateTenantRequest, opts ...grpc1.CallOption) (*ActivateTenantResponse, error)
	DeactivateTenant(ctx context.Context, in *DeactivateTenantRequest, opts ...grpc1.CallOption) (*DeactivateTenantResponse, error)
	OfferInvitation(ctx context.Context, in *OfferInvitationRequest, opts ...grpc1.CallOption) (*OfferInvitationResponse, error)
	WithdrawInvitation(ctx context.Context, in *WithdrawInvitationRequest, opts ...grpc1.CallOption) (*WithdrawInvitationResponse, error)
}

type tenantServiceClient struct {
	cc *grpc1.ClientConn
}

func NewTenantServiceClient(cc *grpc1.ClientConn) TenantServiceClient {
	return &tenantServiceClient{cc}
}

func (c *tenantServiceClient) ProvisionTenant(ctx context.Context, in *ProvisionTenantRequest, opts ...grpc1.CallOption) (*ProvisionTenantResponse, error) {
	out := new(ProvisionTenantResponse)
	err := grpc1.Invoke(ctx, "/iam.TenantService/ProvisionTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantServiceClient) ActivateTenant(ctx context.Context, in *ActivateTenantRequest, opts ...grpc1.CallOption) (*ActivateTenantResponse, error) {
	out := new(ActivateTenantResponse)
	err := grpc1.Invoke(ctx, "/iam.TenantService/ActivateTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantServiceClient) DeactivateTenant(ctx context.Context, in *DeactivateTenantRequest, opts ...grpc1.CallOption) (*DeactivateTenantResponse, error) {
	out := new(DeactivateTenantResponse)
	err := grpc1.Invoke(ctx, "/iam.TenantService/DeactivateTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantServiceClient) OfferInvitation(ctx context.Context, in *OfferInvitationRequest, opts ...grpc1.CallOption) (*OfferInvitationResponse, error) {
	out := new(OfferInvitationResponse)
	err := grpc1.Invoke(ctx, "/iam.TenantService/OfferInvitation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantServiceClient) WithdrawInvitation(ctx context.Context, in *WithdrawInvitationRequest, opts ...grpc1.CallOption) (*WithdrawInvitationResponse, error) {
	out := new(WithdrawInvitationResponse)
	err := grpc1.Invoke(ctx, "/iam.TenantService/WithdrawInvitation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TenantService service

type TenantServiceServer interface {
	ProvisionTenant(context.Context, *ProvisionTenantRequest) (*ProvisionTenantResponse, error)
	ActivateTenant(context.Context, *ActivateTenantRequest) (*ActivateTenantResponse, error)
	DeactivateTenant(context.Context, *DeactivateTenantRequest) (*DeactivateTenantResponse, error)
	OfferInvitation(context.Context, *OfferInvitationRequest) (*OfferInvitationResponse, error)
	WithdrawInvitation(context.Context, *WithdrawInvitationRequest) (*WithdrawInvitationResponse, error)
}

func RegisterTenantServiceServer(s *grpc1.Server, srv TenantServiceServer) {
	s.RegisterService(&_TenantService_serviceDesc, srv)
}

func _TenantService_ProvisionTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProvisionTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).ProvisionTenant(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.TenantService/ProvisionTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).ProvisionTenant(ctx, req.(*ProvisionTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantService_ActivateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).ActivateTenant(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.TenantService/ActivateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).ActivateTenant(ctx, req.(*ActivateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantService_DeactivateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).DeactivateTenant(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.TenantService/DeactivateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).DeactivateTenant(ctx, req.(*DeactivateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantService_OfferInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).OfferInvitation(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.TenantService/OfferInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).OfferInvitation(ctx, req.(*OfferInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantService_WithdrawInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServiceServer).WithdrawInvitation(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.TenantService/WithdrawInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServiceServer).WithdrawInvitation(ctx, req.(*WithdrawInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TenantService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "iam.TenantService",
	HandlerType: (*TenantServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "ProvisionTenant",
			Handler:    _TenantService_ProvisionTenant_Handler,
		},
		{
			MethodName: "ActivateTenant",
			Handler:    _TenantService_ActivateTenant_Handler,
		},
		{
			MethodName: "DeactivateTenant",
			Handler:    _TenantService_DeactivateTenant_Handler,
		},
		{
			MethodName: "OfferInvitation",
			Handler:    _TenantService_OfferInvitation_Handler,
		},
		{
			MethodName: "WithdrawInvitation",
			Handler:    _TenantService_WithdrawInvitation_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "tenants.proto",
}

func init() { proto.RegisterFile("tenants.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 691 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xe1, 0x4a, 0x1b, 0x4b,
	0x14, 0x36, 0x26, 0x57, 0xb3, 0x27, 0x6e, 0xd4, 0xb9, 0x5c, 0x8d, 0x89, 0x5e, 0xbd, 0x2b, 0x97,
	0x0a, 0xa5, 0x16, 0x6c, 0x11, 0x5a, 0xa4, 0x60, 0x2b, 0x82, 0x14, 0x52, 0xbb, 0x15, 0x84, 0x42,
	0x09, 0xe3, 0xce, 0x51, 0x07, 0xb2, 0x33, 0xdb, 0x99, 0x49, 0xc4, 0xc7, 0xe8, 0x5b, 0xf4, 0x91,
	0xfa, 0x00, 0x7d, 0x90, 0xb2, 0x33, 0x93, 0xc4, 0x24, 0x9b, 0x52, 0xff, 0x25, 0xdf, 0x77, 0xce,
	0x77, 0x66, 0xe6, 0x9c, 0xef, 0x2c, 0x84, 0x06, 0x05, 0x15, 0x46, 0xef, 0x67, 0x4a, 0x1a, 0x49,
	0xca, 0x9c, 0xa6, 0xd1, 0xcf, 0x79, 0x58, 0x3b, 0x57, 0xb2, 0xcf, 0x35, 0x97, 0xe2, 0xc2, 0xf2,
	0x31, 0x7e, 0xed, 0xa1, 0x36, 0x64, 0x1b, 0x6a, 0x2e, 0xa1, 0x23, 0x68, 0x8a, 0x8d, 0xd2, 0x4e,
	0x69, 0x2f, 0x88, 0xc1, 0x41, 0x6d, 0x9a, 0x22, 0x79, 0x06, 0xc4, 0x07, 0x30, 0xd4, 0x89, 0xe2,
	0x99, 0xe1, 0x52, 0x34, 0xe6, 0x6d, 0xdc, 0xaa, 0x63, 0x4e, 0x46, 0x04, 0x39, 0x02, 0x42, 0x59,
	0xca, 0x05, 0xd7, 0x46, 0x51, 0x23, 0x95, 0x93, 0x2d, 0xef, 0x94, 0xf6, 0x6a, 0x07, 0xe1, 0x3e,
	0xa7, 0xe9, 0xfe, 0x69, 0xaf, 0xdb, 0xcd, 0x95, 0xe3, 0xd5, 0xb1, 0x40, 0x5b, 0x6c, 0x17, 0x42,
	0x4c, 0x29, 0xef, 0x76, 0x28, 0x63, 0x0a, 0xb5, 0x6e, 0x54, 0x6c, 0x9d, 0x25, 0x0b, 0x1e, 0x3b,
	0x8c, 0xbc, 0x82, 0x7a, 0x26, 0xb5, 0xa1, 0xa3, 0xa8, 0xbf, 0xac, 0x3c, 0xb1, 0xf2, 0xe7, 0x96,
	0xf2, 0xb1, 0x71, 0x98, 0x3d, 0xfc, 0x4b, 0x9e, 0xc2, 0x6a, 0xa6, 0x78, 0x4a, 0xd5, 0x7d, 0xc7,
	0x60, 0x17, 0xb3, 0x5b, 0x29, 0xb0, 0xb1, 0x60, 0x6b, 0xac, 0x78, 0xe2, 0x62, 0x80, 0x93, 0xe7,
	0xf0, 0xb7, 0xc6, 0x44, 0x0a, 0x36, 0x1e, 0xbe, 0x68, 0xc3, 0xc9, 0x90, 0x1a, 0x26, 0x44, 0x87,
	0xb0, 0x3e, 0xf5, 0xca, 0x3a, 0x93, 0x42, 0x23, 0x69, 0x41, 0xe0, 0x5f, 0x91, 0x33, 0xff, 0xc8,
	0x55, 0x07, 0x9c, 0xb1, 0xe8, 0x25, 0xfc, 0x73, 0x9c, 0x18, 0xde, 0xa7, 0x06, 0xc7, 0x9b, 0xf3,
	0xdb, 0xac, 0x43, 0x58, 0x9b, 0xcc, 0xf2, 0xc5, 0x36, 0x21, 0xa0, 0x9e, 0x71, 0x69, 0xd5, 0x78,
	0x04, 0xe4, 0xa7, 0x3c, 0x41, 0xfa, 0xf8, 0x7a, 0x47, 0xd0, 0x98, 0xce, 0xf3, 0x15, 0x77, 0xa0,
	0xc6, 0x70, 0xb2, 0xe6, 0x43, 0x28, 0xfa, 0x56, 0x82, 0xb5, 0x0f, 0xd7, 0xd7, 0xa8, 0xce, 0x44,
	0x9f, 0x1b, 0x9a, 0xcf, 0xca, 0x9f, 0x54, 0x75, 0xca, 0x93, 0x73, 0xf7, 0x10, 0x22, 0x5b, 0x00,
	0xda, 0x50, 0x65, 0x3a, 0x8c, 0x1a, 0x37, 0x69, 0xe5, 0x38, 0xb0, 0xc8, 0x09, 0x35, 0x48, 0x36,
	0xa0, 0x8a, 0x82, 0x39, 0xb2, 0x62, 0xc9, 0x45, 0x14, 0x2c, 0xa7, 0xa2, 0x37, 0xb0, 0x3e, 0x75,
	0x24, 0x7f, 0xa1, 0x5d, 0x08, 0xf9, 0x10, 0x1d, 0x9d, 0x6b, 0x69, 0x04, 0x9e, 0xb1, 0xe8, 0x0b,
	0x6c, 0x5c, 0x72, 0x73, 0xcb, 0x14, 0xbd, 0x7b, 0xe4, 0xad, 0xa6, 0xe4, 0xe7, 0x0b, 0xe4, 0x5f,
	0x43, 0xb3, 0x48, 0x7e, 0xd4, 0xe4, 0x3b, 0xcf, 0x8a, 0x41, 0x93, 0x87, 0x40, 0x74, 0x0a, 0xd5,
	0x81, 0xcf, 0xf2, 0x07, 0xba, 0xe6, 0x4a, 0x8f, 0x39, 0x3c, 0xb0, 0x88, 0xa5, 0x5b, 0x10, 0x74,
	0xe9, 0x80, 0x75, 0xe7, 0xa8, 0xe6, 0x40, 0x4e, 0x46, 0x3f, 0x4a, 0x10, 0x8e, 0x39, 0x2a, 0x5f,
	0x18, 0xda, 0x28, 0xc4, 0xf1, 0x85, 0xe1, 0x20, 0xab, 0xf7, 0x04, 0x96, 0xaf, 0x7a, 0xbc, 0xcb,
	0xb8, 0xb8, 0xe9, 0x88, 0x5e, 0x7a, 0x85, 0xca, 0xab, 0xd6, 0x07, 0x70, 0xdb, 0xa2, 0xb9, 0x92,
	0xf7, 0x71, 0x22, 0x99, 0xeb, 0x5c, 0x10, 0x83, 0x83, 0xde, 0x49, 0x86, 0x84, 0x40, 0xc5, 0xc8,
	0x3b, 0xe1, 0x97, 0x80, 0xfd, 0x4d, 0xfe, 0x87, 0xba, 0x36, 0xd4, 0x60, 0x27, 0xcb, 0x9d, 0x26,
	0x12, 0xb4, 0xe6, 0x0f, 0xe2, 0xd0, 0xa2, 0xe7, 0x1e, 0x24, 0xff, 0xc1, 0x52, 0x22, 0x7b, 0xc2,
	0xa8, 0x7b, 0x27, 0xee, 0x3c, 0x5e, 0xf3, 0x58, 0xae, 0x7e, 0xf0, 0xbd, 0x0c, 0xa1, 0x1b, 0xe3,
	0x4f, 0xa8, 0xfa, 0x3c, 0x41, 0xd2, 0x86, 0xe5, 0x09, 0xff, 0x92, 0x96, 0xdb, 0x29, 0x85, 0xbb,
	0xb3, 0xb9, 0x59, 0x4c, 0xba, 0x06, 0x45, 0x73, 0xe4, 0x3d, 0xd4, 0xc7, 0x1d, 0x4a, 0x9a, 0x36,
	0xa3, 0xd0, 0xec, 0xcd, 0x56, 0x21, 0x37, 0x14, 0xfb, 0x08, 0x2b, 0x93, 0xf6, 0x23, 0xee, 0x00,
	0x33, 0xdc, 0xdc, 0xdc, 0x9a, 0xc1, 0x0e, 0x25, 0xdb, 0xb0, 0x3c, 0x31, 0xff, 0xfe, 0xbe, 0xc5,
	0x46, 0xf5, 0xf7, 0x9d, 0x61, 0x99, 0x68, 0x8e, 0x5c, 0x02, 0x99, 0x1e, 0x58, 0xf2, 0xaf, 0xcd,
	0x9a, 0x69, 0x94, 0xe6, 0xf6, 0x4c, 0x7e, 0x20, 0xfc, 0x76, 0xe1, 0x73, 0xe5, 0x46, 0x65, 0xc9,
	0xd5, 0x82, 0xfd, 0xa6, 0xbd, 0xf8, 0x15, 0x00, 0x00, 0xff, 0xff, 0x52, 0xd0, 0x64, 0x9b, 0xe4,
	0x06, 0x00, 0x00,
}
