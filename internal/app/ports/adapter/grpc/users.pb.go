// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RegisterUserRequest struct {
	TenantId              string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	InvitationId          string `protobuf:"bytes,2,opt,name=invitation_id,json=invitationId" json:"invitation_id,omitempty"`
	Username              string `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	Password              string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	FirstName             string `protobuf:"bytes,5,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName              string `protobuf:"bytes,6,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Enabled               bool   `protobuf:"varint,7,opt,name=enabled" json:"enabled,omitempty"`
	StartDate             int64  `protobuf:"varint,8,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	EndDate               int64  `protobuf:"varint,9,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
	EmailAddress          string `protobuf:"bytes,10,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	PrimaryTelephone      string `protobuf:"bytes,11,opt,name=primary_telephone,json=primaryTelephone" json:"primary_telephone,omitempty"`
	SecondaryTelephone    string `protobuf:"bytes,12,opt,name=secondary_telephone,json=secondaryTelephone" json:"secondary_telephone,omitempty"`
	AddressStreetName     string `protobuf:"bytes,13,opt,name=address_street_name,json=addressStreetName" json:"address_street_name,omitempty"`
	AddressBuildingNumber string `protobuf:"bytes,14,opt,name=address_building_number,json=addressBuildingNumber" json:"address_building_number,omitempty"`
	AddressPostalCode     string `protobuf:"bytes,15,opt,name=address_postal_code,json=addressPostalCode" json:"address_postal_code,omitempty"`
	AddressTown           string `protobuf:"bytes,16,opt,name=address_town,json=addressTown" json:"address_town,omitempty"`
	AddressStateProvince  string `protobuf:"bytes,17,opt,name=address_state_province,json=addressStateProvince" json:"address_state_province,omitempty"`
	AddressCountryCode    string `protobuf:"bytes,18,opt,name=address_country_code,json=addressCountryCode" json:"address_country_code,omitempty"`
}

func (m *RegisterUserRequest) Reset()                    { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()               {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *RegisterUserRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *RegisterUserRequest) GetInvitationId() string {
	if m != nil {
		return m.InvitationId
	}
	return ""
}

func (m *RegisterUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterUserRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *RegisterUserRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *RegisterUserRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *RegisterUserRequest) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *RegisterUserRequest) GetEndDate() int64 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

func (m *RegisterUserRequest) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *RegisterUserRequest) GetPrimaryTelephone() string {
	if m != nil {
		return m.PrimaryTelephone
	}
	return ""
}

func (m *RegisterUserRequest) GetSecondaryTelephone() string {
	if m != nil {
		return m.SecondaryTelephone
	}
	return ""
}

func (m *RegisterUserRequest) GetAddressStreetName() string {
	if m != nil {
		return m.AddressStreetName
	}
	return ""
}

func (m *RegisterUserRequest) GetAddressBuildingNumber() string {
	if m != nil {
		return m.AddressBuildingNumber
	}
	return ""
}

func (m *RegisterUserRequest) GetAddressPostalCode() string {
	if m != nil {
		return m.AddressPostalCode
	}
	return ""
}

func (m *RegisterUserRequest) GetAddressTown() string {
	if m != nil {
		return m.AddressTown
	}
	return ""
}

func (m *RegisterUserRequest) GetAddressStateProvince() string {
	if m != nil {
		return m.AddressStateProvince
	}
	return ""
}

func (m *RegisterUserRequest) GetAddressCountryCode() string {
	if m != nil {
		return m.AddressCountryCode
	}
	return ""
}

type RegisterUserResponse struct {
}

func (m *RegisterUserResponse) Reset()                    { *m = RegisterUserResponse{} }
func (m *RegisterUserResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterUserResponse) ProtoMessage()               {}
func (*RegisterUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type AuthenticateUserRequest struct {
	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *AuthenticateUserRequest) Reset()                    { *m = AuthenticateUserRequest{} }
func (m *AuthenticateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateUserRequest) ProtoMessage()               {}
func (*AuthenticateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *AuthenticateUserRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *AuthenticateUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthenticateUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthenticateUserResponse struct {
	TenantId     string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username     string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	FirstName    string `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName     string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	EmailAddress string `protobuf:"bytes,5,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
}

func (m *AuthenticateUserResponse) Reset()                    { *m = AuthenticateUserResponse{} }
func (m *AuthenticateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateUserResponse) ProtoMessage()               {}
func (*AuthenticateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *AuthenticateUserResponse) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *AuthenticateUserResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthenticateUserResponse) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *AuthenticateUserResponse) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *AuthenticateUserResponse) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

type ChangeContactInformationRequest struct {
	TenantId              string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username              string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	EmailAddress          string `protobuf:"bytes,3,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	PrimaryTelephone      string `protobuf:"bytes,4,opt,name=primary_telephone,json=primaryTelephone" json:"primary_telephone,omitempty"`
	SecondaryTelephone    string `protobuf:"bytes,5,opt,name=secondary_telephone,json=secondaryTelephone" json:"secondary_telephone,omitempty"`
	AddressStreetName     string `protobuf:"bytes,6,opt,name=address_street_name,json=addressStreetName" json:"address_street_name,omitempty"`
	AddressBuildingNumber string `protobuf:"bytes,7,opt,name=address_building_number,json=addressBuildingNumber" json:"address_building_number,omitempty"`
	AddressPostalCode     string `protobuf:"bytes,8,opt,name=address_postal_code,json=addressPostalCode" json:"address_postal_code,omitempty"`
	AddressTown           string `protobuf:"bytes,9,opt,name=address_town,json=addressTown" json:"address_town,omitempty"`
	AddressStateProvince  string `protobuf:"bytes,10,opt,name=address_state_province,json=addressStateProvince" json:"address_state_province,omitempty"`
	AddressCountryCode    string `protobuf:"bytes,11,opt,name=address_country_code,json=addressCountryCode" json:"address_country_code,omitempty"`
}

func (m *ChangeContactInformationRequest) Reset()                    { *m = ChangeContactInformationRequest{} }
func (m *ChangeContactInformationRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeContactInformationRequest) ProtoMessage()               {}
func (*ChangeContactInformationRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *ChangeContactInformationRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetPrimaryTelephone() string {
	if m != nil {
		return m.PrimaryTelephone
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetSecondaryTelephone() string {
	if m != nil {
		return m.SecondaryTelephone
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetAddressStreetName() string {
	if m != nil {
		return m.AddressStreetName
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetAddressBuildingNumber() string {
	if m != nil {
		return m.AddressBuildingNumber
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetAddressPostalCode() string {
	if m != nil {
		return m.AddressPostalCode
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetAddressTown() string {
	if m != nil {
		return m.AddressTown
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetAddressStateProvince() string {
	if m != nil {
		return m.AddressStateProvince
	}
	return ""
}

func (m *ChangeContactInformationRequest) GetAddressCountryCode() string {
	if m != nil {
		return m.AddressCountryCode
	}
	return ""
}

type ChangeContactInformationResponse struct {
}

func (m *ChangeContactInformationResponse) Reset()         { *m = ChangeContactInformationResponse{} }
func (m *ChangeContactInformationResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeContactInformationResponse) ProtoMessage()    {}
func (*ChangeContactInformationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{5}
}

type ChangeEmailAddressRequest struct {
	TenantId     string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username     string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	EmailAddress string `protobuf:"bytes,3,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
}

func (m *ChangeEmailAddressRequest) Reset()                    { *m = ChangeEmailAddressRequest{} }
func (m *ChangeEmailAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeEmailAddressRequest) ProtoMessage()               {}
func (*ChangeEmailAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *ChangeEmailAddressRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ChangeEmailAddressRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangeEmailAddressRequest) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

type ChangeEmailAddressResponse struct {
}

func (m *ChangeEmailAddressResponse) Reset()                    { *m = ChangeEmailAddressResponse{} }
func (m *ChangeEmailAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeEmailAddressResponse) ProtoMessage()               {}
func (*ChangeEmailAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

type ChangePrimaryTelephoneRequest struct {
	TenantId         string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username         string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	PrimaryTelephone string `protobuf:"bytes,3,opt,name=primary_telephone,json=primaryTelephone" json:"primary_telephone,omitempty"`
}

func (m *ChangePrimaryTelephoneRequest) Reset()                    { *m = ChangePrimaryTelephoneRequest{} }
func (m *ChangePrimaryTelephoneRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangePrimaryTelephoneRequest) ProtoMessage()               {}
func (*ChangePrimaryTelephoneRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *ChangePrimaryTelephoneRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ChangePrimaryTelephoneRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangePrimaryTelephoneRequest) GetPrimaryTelephone() string {
	if m != nil {
		return m.PrimaryTelephone
	}
	return ""
}

type ChangePrimaryTelephoneResponse struct {
}

func (m *ChangePrimaryTelephoneResponse) Reset()                    { *m = ChangePrimaryTelephoneResponse{} }
func (m *ChangePrimaryTelephoneResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangePrimaryTelephoneResponse) ProtoMessage()               {}
func (*ChangePrimaryTelephoneResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

type ChangeSecondaryTelephoneRequest struct {
	TenantId           string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username           string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	SecondaryTelephone string `protobuf:"bytes,3,opt,name=secondary_telephone,json=secondaryTelephone" json:"secondary_telephone,omitempty"`
}

func (m *ChangeSecondaryTelephoneRequest) Reset()         { *m = ChangeSecondaryTelephoneRequest{} }
func (m *ChangeSecondaryTelephoneRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeSecondaryTelephoneRequest) ProtoMessage()    {}
func (*ChangeSecondaryTelephoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{10}
}

func (m *ChangeSecondaryTelephoneRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ChangeSecondaryTelephoneRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangeSecondaryTelephoneRequest) GetSecondaryTelephone() string {
	if m != nil {
		return m.SecondaryTelephone
	}
	return ""
}

type ChangeSecondaryTelephoneResponse struct {
}

func (m *ChangeSecondaryTelephoneResponse) Reset()         { *m = ChangeSecondaryTelephoneResponse{} }
func (m *ChangeSecondaryTelephoneResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeSecondaryTelephoneResponse) ProtoMessage()    {}
func (*ChangeSecondaryTelephoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{11}
}

type ChangePostalAddressRequest struct {
	TenantId              string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username              string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	AddressStreetName     string `protobuf:"bytes,3,opt,name=address_street_name,json=addressStreetName" json:"address_street_name,omitempty"`
	AddressBuildingNumber string `protobuf:"bytes,4,opt,name=address_building_number,json=addressBuildingNumber" json:"address_building_number,omitempty"`
	AddressPostalCode     string `protobuf:"bytes,5,opt,name=address_postal_code,json=addressPostalCode" json:"address_postal_code,omitempty"`
	AddressTown           string `protobuf:"bytes,6,opt,name=address_town,json=addressTown" json:"address_town,omitempty"`
	AddressStateProvince  string `protobuf:"bytes,7,opt,name=address_state_province,json=addressStateProvince" json:"address_state_province,omitempty"`
	AddressCountryCode    string `protobuf:"bytes,8,opt,name=address_country_code,json=addressCountryCode" json:"address_country_code,omitempty"`
}

func (m *ChangePostalAddressRequest) Reset()                    { *m = ChangePostalAddressRequest{} }
func (m *ChangePostalAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangePostalAddressRequest) ProtoMessage()               {}
func (*ChangePostalAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *ChangePostalAddressRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ChangePostalAddressRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangePostalAddressRequest) GetAddressStreetName() string {
	if m != nil {
		return m.AddressStreetName
	}
	return ""
}

func (m *ChangePostalAddressRequest) GetAddressBuildingNumber() string {
	if m != nil {
		return m.AddressBuildingNumber
	}
	return ""
}

func (m *ChangePostalAddressRequest) GetAddressPostalCode() string {
	if m != nil {
		return m.AddressPostalCode
	}
	return ""
}

func (m *ChangePostalAddressRequest) GetAddressTown() string {
	if m != nil {
		return m.AddressTown
	}
	return ""
}

func (m *ChangePostalAddressRequest) GetAddressStateProvince() string {
	if m != nil {
		return m.AddressStateProvince
	}
	return ""
}

func (m *ChangePostalAddressRequest) GetAddressCountryCode() string {
	if m != nil {
		return m.AddressCountryCode
	}
	return ""
}

type ChangePostalAddressResponse struct {
}

func (m *ChangePostalAddressResponse) Reset()                    { *m = ChangePostalAddressResponse{} }
func (m *ChangePostalAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangePostalAddressResponse) ProtoMessage()               {}
func (*ChangePostalAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

type ChangeUserPasswordRequest struct {
	TenantId        string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username        string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	CurrentPassword string `protobuf:"bytes,3,opt,name=current_password,json=currentPassword" json:"current_password,omitempty"`
	ChangedPassword string `protobuf:"bytes,4,opt,name=changed_password,json=changedPassword" json:"changed_password,omitempty"`
}

func (m *ChangeUserPasswordRequest) Reset()                    { *m = ChangeUserPasswordRequest{} }
func (m *ChangeUserPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeUserPasswordRequest) ProtoMessage()               {}
func (*ChangeUserPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *ChangeUserPasswordRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ChangeUserPasswordRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangeUserPasswordRequest) GetCurrentPassword() string {
	if m != nil {
		return m.CurrentPassword
	}
	return ""
}

func (m *ChangeUserPasswordRequest) GetChangedPassword() string {
	if m != nil {
		return m.ChangedPassword
	}
	return ""
}

type ChangeUserPasswordResponse struct {
}

func (m *ChangeUserPasswordResponse) Reset()                    { *m = ChangeUserPasswordResponse{} }
func (m *ChangeUserPasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeUserPasswordResponse) ProtoMessage()               {}
func (*ChangeUserPasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

type ChangeUserPersonalNameRequest struct {
	TenantId  string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
}

func (m *ChangeUserPersonalNameRequest) Reset()                    { *m = ChangeUserPersonalNameRequest{} }
func (m *ChangeUserPersonalNameRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeUserPersonalNameRequest) ProtoMessage()               {}
func (*ChangeUserPersonalNameRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{16} }

func (m *ChangeUserPersonalNameRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ChangeUserPersonalNameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangeUserPersonalNameRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *ChangeUserPersonalNameRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type ChangeUserPersonalNameResponse struct {
}

func (m *ChangeUserPersonalNameResponse) Reset()                    { *m = ChangeUserPersonalNameResponse{} }
func (m *ChangeUserPersonalNameResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeUserPersonalNameResponse) ProtoMessage()               {}
func (*ChangeUserPersonalNameResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{17} }

type DefineUserEnablementRequest struct {
	TenantId  string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Enabled   bool   `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	StartDate int64  `protobuf:"varint,4,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	EndDate   int64  `protobuf:"varint,5,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
}

func (m *DefineUserEnablementRequest) Reset()                    { *m = DefineUserEnablementRequest{} }
func (m *DefineUserEnablementRequest) String() string            { return proto.CompactTextString(m) }
func (*DefineUserEnablementRequest) ProtoMessage()               {}
func (*DefineUserEnablementRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{18} }

func (m *DefineUserEnablementRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *DefineUserEnablementRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *DefineUserEnablementRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *DefineUserEnablementRequest) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *DefineUserEnablementRequest) GetEndDate() int64 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

type DefineUserEnablementResponse struct {
}

func (m *DefineUserEnablementResponse) Reset()                    { *m = DefineUserEnablementResponse{} }
func (m *DefineUserEnablementResponse) String() string            { return proto.CompactTextString(m) }
func (*DefineUserEnablementResponse) ProtoMessage()               {}
func (*DefineUserEnablementResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{19} }

func init() {
	proto.RegisterType((*RegisterUserRequest)(nil), "iam.RegisterUserRequest")
	proto.RegisterType((*RegisterUserResponse)(nil), "iam.RegisterUserResponse")
	proto.RegisterType((*AuthenticateUserRequest)(nil), "iam.AuthenticateUserRequest")
	proto.RegisterType((*AuthenticateUserResponse)(nil), "iam.AuthenticateUserResponse")
	proto.RegisterType((*ChangeContactInformationRequest)(nil), "iam.ChangeContactInformationRequest")
	proto.RegisterType((*ChangeContactInformationResponse)(nil), "iam.ChangeContactInformationResponse")
	proto.RegisterType((*ChangeEmailAddressRequest)(nil), "iam.ChangeEmailAddressRequest")
	proto.RegisterType((*ChangeEmailAddressResponse)(nil), "iam.ChangeEmailAddressResponse")
	proto.RegisterType((*ChangePrimaryTelephoneRequest)(nil), "iam.ChangePrimaryTelephoneRequest")
	proto.RegisterType((*ChangePrimaryTelephoneResponse)(nil), "iam.ChangePrimaryTelephoneResponse")
	proto.RegisterType((*ChangeSecondaryTelephoneRequest)(nil), "iam.ChangeSecondaryTelephoneRequest")
	proto.RegisterType((*ChangeSecondaryTelephoneResponse)(nil), "iam.ChangeSecondaryTelephoneResponse")
	proto.RegisterType((*ChangePostalAddressRequest)(nil), "iam.ChangePostalAddressRequest")
	proto.RegisterType((*ChangePostalAddressResponse)(nil), "iam.ChangePostalAddressResponse")
	proto.RegisterType((*ChangeUserPasswordRequest)(nil), "iam.ChangeUserPasswordRequest")
	proto.RegisterType((*ChangeUserPasswordResponse)(nil), "iam.ChangeUserPasswordResponse")
	proto.RegisterType((*ChangeUserPersonalNameRequest)(nil), "iam.ChangeUserPersonalNameRequest")
	proto.RegisterType((*ChangeUserPersonalNameResponse)(nil), "iam.ChangeUserPersonalNameResponse")
	proto.RegisterType((*DefineUserEnablementRequest)(nil), "iam.DefineUserEnablementRequest")
	proto.RegisterType((*DefineUserEnablementResponse)(nil), "iam.DefineUserEnablementResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc1.CallOption) (*RegisterUserResponse, error)
	AuthenticateUser(ctx context.Context, in *AuthenticateUserRequest, opts ...grpc1.CallOption) (*AuthenticateUserResponse, error)
	ChangeContactInformation(ctx context.Context, in *ChangeContactInformationRequest, opts ...grpc1.CallOption) (*ChangeContactInformationResponse, error)
	ChangeEmailAddress(ctx context.Context, in *ChangeEmailAddressRequest, opts ...grpc1.CallOption) (*ChangeEmailAddressResponse, error)
	ChangePostalAddress(ctx context.Context, in *ChangePostalAddressRequest, opts ...grpc1.CallOption) (*ChangePostalAddressResponse, error)
	ChangePrimaryTelephone(ctx context.Context, in *ChangePrimaryTelephoneRequest, opts ...grpc1.CallOption) (*ChangePrimaryTelephoneResponse, error)
	ChangeSecondaryTelephone(ctx context.Context, in *ChangeSecondaryTelephoneRequest, opts ...grpc1.CallOption) (*ChangeSecondaryTelephoneResponse, error)
	ChangeUserPassword(ctx context.Context, in *ChangeUserPasswordRequest, opts ...grpc1.CallOption) (*ChangeUserPasswordResponse, error)
	ChangeUserPersonalName(ctx context.Context, in *ChangeUserPersonalNameRequest, opts ...grpc1.CallOption) (*ChangeUserPersonalNameResponse, error)
	DefineUserEnablement(ctx context.Context, in *DefineUserEnablementRequest, opts ...grpc1.CallOption) (*DefineUserEnablementResponse, error)
}

type userServiceClient struct {
	cc *grpc1.ClientConn
}

func NewUserServiceClient(cc *grpc1.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc1.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/RegisterUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AuthenticateUser(ctx context.Context, in *AuthenticateUserRequest, opts ...grpc1.CallOption) (*AuthenticateUserResponse, error) {
	out := new(AuthenticateUserResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/AuthenticateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangeContactInformation(ctx context.Context, in *ChangeContactInformationRequest, opts ...grpc1.CallOption) (*ChangeContactInformationResponse, error) {
	out := new(ChangeContactInformationResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/ChangeContactInformation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangeEmailAddress(ctx context.Context, in *ChangeEmailAddressRequest, opts ...grpc1.CallOption) (*ChangeEmailAddressResponse, error) {
	out := new(ChangeEmailAddressResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/ChangeEmailAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangePostalAddress(ctx context.Context, in *ChangePostalAddressRequest, opts ...grpc1.CallOption) (*ChangePostalAddressResponse, error) {
	out := new(ChangePostalAddressResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/ChangePostalAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangePrimaryTelephone(ctx context.Context, in *ChangePrimaryTelephoneRequest, opts ...grpc1.CallOption) (*ChangePrimaryTelephoneResponse, error) {
	out := new(ChangePrimaryTelephoneResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/ChangePrimaryTelephone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangeSecondaryTelephone(ctx context.Context, in *ChangeSecondaryTelephoneRequest, opts ...grpc1.CallOption) (*ChangeSecondaryTelephoneResponse, error) {
	out := new(ChangeSecondaryTelephoneResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/ChangeSecondaryTelephone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangeUserPassword(ctx context.Context, in *ChangeUserPasswordRequest, opts ...grpc1.CallOption) (*ChangeUserPasswordResponse, error) {
	out := new(ChangeUserPasswordResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/ChangeUserPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangeUserPersonalName(ctx context.Context, in *ChangeUserPersonalNameRequest, opts ...grpc1.CallOption) (*ChangeUserPersonalNameResponse, error) {
	out := new(ChangeUserPersonalNameResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/ChangeUserPersonalName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DefineUserEnablement(ctx context.Context, in *DefineUserEnablementRequest, opts ...grpc1.CallOption) (*DefineUserEnablementResponse, error) {
	out := new(DefineUserEnablementResponse)
	err := grpc1.Invoke(ctx, "/iam.UserService/DefineUserEnablement", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
	AuthenticateUser(context.Context, *AuthenticateUserRequest) (*AuthenticateUserResponse, error)
	ChangeContactInformation(context.Context, *ChangeContactInformationRequest) (*ChangeContactInformationResponse, error)
	ChangeEmailAddress(context.Context, *ChangeEmailAddressRequest) (*ChangeEmailAddressResponse, error)
	ChangePostalAddress(context.Context, *ChangePostalAddressRequest) (*ChangePostalAddressResponse, error)
	ChangePrimaryTelephone(context.Context, *ChangePrimaryTelephoneRequest) (*ChangePrimaryTelephoneResponse, error)
	ChangeSecondaryTelephone(context.Context, *ChangeSecondaryTelephoneRequest) (*ChangeSecondaryTelephoneResponse, error)
	ChangeUserPassword(context.Context, *ChangeUserPasswordRequest) (*ChangeUserPasswordResponse, error)
	ChangeUserPersonalName(context.Context, *ChangeUserPersonalNameRequest) (*ChangeUserPersonalNameResponse, error)
	DefineUserEnablement(context.Context, *DefineUserEnablementRequest) (*DefineUserEnablementResponse, error)
}

func RegisterUserServiceServer(s *grpc1.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RegisterUser(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AuthenticateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AuthenticateUser(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/AuthenticateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AuthenticateUser(ctx, req.(*AuthenticateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangeContactInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeContactInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangeContactInformation(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/ChangeContactInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangeContactInformation(ctx, req.(*ChangeContactInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangeEmailAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeEmailAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangeEmailAddress(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/ChangeEmailAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangeEmailAddress(ctx, req.(*ChangeEmailAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangePostalAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePostalAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangePostalAddress(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/ChangePostalAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangePostalAddress(ctx, req.(*ChangePostalAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangePrimaryTelephone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePrimaryTelephoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangePrimaryTelephone(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/ChangePrimaryTelephone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangePrimaryTelephone(ctx, req.(*ChangePrimaryTelephoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangeSecondaryTelephone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeSecondaryTelephoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangeSecondaryTelephone(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/ChangeSecondaryTelephone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangeSecondaryTelephone(ctx, req.(*ChangeSecondaryTelephoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangeUserPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeUserPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangeUserPassword(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/ChangeUserPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangeUserPassword(ctx, req.(*ChangeUserPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangeUserPersonalName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeUserPersonalNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangeUserPersonalName(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/ChangeUserPersonalName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangeUserPersonalName(ctx, req.(*ChangeUserPersonalNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DefineUserEnablement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefineUserEnablementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DefineUserEnablement(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.UserService/DefineUserEnablement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DefineUserEnablement(ctx, req.(*DefineUserEnablementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "iam.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _UserService_RegisterUser_Handler,
		},
		{
			MethodName: "AuthenticateUser",
			Handler:    _UserService_AuthenticateUser_Handler,
		},
		{
			MethodName: "ChangeContactInformation",
			Handler:    _UserService_ChangeContactInformation_Handler,
		},
		{
			MethodName: "ChangeEmailAddress",
			Handler:    _UserService_ChangeEmailAddress_Handler,
		},
		{
			MethodName: "ChangePostalAddress",
			Handler:    _UserService_ChangePostalAddress_Handler,
		},
		{
			MethodName: "ChangePrimaryTelephone",
			Handler:    _UserService_ChangePrimaryTelephone_Handler,
		},
		{
			MethodName: "ChangeSecondaryTelephone",
			Handler:    _UserService_ChangeSecondaryTelephone_Handler,
		},
		{
			MethodName: "ChangeUserPassword",
			Handler:    _UserService_ChangeUserPassword_Handler,
		},
		{
			MethodName: "ChangeUserPersonalName",
			Handler:    _UserService_ChangeUserPersonalName_Handler,
		},
		{
			MethodName: "DefineUserEnablement",
			Handler:    _UserService_DefineUserEnablement_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "users.proto",
}

func init() { proto.RegisterFile("users.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 979 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x6e, 0xe3, 0x36,
	0x10, 0x5e, 0x47, 0xfe, 0x1d, 0x27, 0x4d, 0xc2, 0xa4, 0x59, 0x45, 0xf9, 0x59, 0xaf, 0xd2, 0x02,
	0x29, 0x0a, 0xa4, 0x45, 0x5b, 0xf4, 0xbe, 0x9b, 0xcd, 0x21, 0x97, 0x45, 0xea, 0x6c, 0x51, 0x60,
	0x81, 0x42, 0x60, 0xa4, 0x49, 0x42, 0xc0, 0x26, 0x5d, 0x92, 0x4e, 0x90, 0x5b, 0x2f, 0x3d, 0xf5,
	0xda, 0xa7, 0xe8, 0x79, 0x5f, 0xa1, 0xef, 0xd4, 0x63, 0x21, 0x8a, 0xb2, 0x25, 0x4b, 0xf2, 0x26,
	0x76, 0xb1, 0x47, 0xcd, 0x37, 0x43, 0x7e, 0xe4, 0xcc, 0xc7, 0x19, 0x41, 0x77, 0xac, 0x50, 0xaa,
	0x93, 0x91, 0x14, 0x5a, 0x10, 0x87, 0xd1, 0xa1, 0xff, 0x4f, 0x03, 0xb6, 0xfa, 0x78, 0xc3, 0x94,
	0x46, 0xf9, 0xb3, 0x42, 0xd9, 0xc7, 0xdf, 0xc6, 0xa8, 0x34, 0xd9, 0x83, 0x8e, 0x46, 0x4e, 0xb9,
	0x0e, 0x58, 0xe4, 0xd6, 0x7a, 0xb5, 0xe3, 0x4e, 0xbf, 0x9d, 0x18, 0xce, 0x23, 0x72, 0x04, 0x6b,
	0x8c, 0xdf, 0x31, 0x4d, 0x35, 0x13, 0x3c, 0x76, 0x58, 0x31, 0x0e, 0xab, 0x53, 0xe3, 0x79, 0x44,
	0x3c, 0x68, 0xc7, 0xbb, 0x71, 0x3a, 0x44, 0xd7, 0x49, 0x16, 0x48, 0xbf, 0x63, 0x6c, 0x44, 0x95,
	0xba, 0x17, 0x32, 0x72, 0xeb, 0x09, 0x96, 0x7e, 0x93, 0x03, 0x80, 0x6b, 0x26, 0x95, 0x0e, 0x4c,
	0x64, 0xc3, 0xa0, 0x1d, 0x63, 0x79, 0x1b, 0x87, 0xee, 0x41, 0x67, 0x40, 0x53, 0xb4, 0x99, 0xc4,
	0xc6, 0x06, 0x03, 0xba, 0xd0, 0x42, 0x4e, 0xaf, 0x06, 0x18, 0xb9, 0xad, 0x5e, 0xed, 0xb8, 0xdd,
	0x4f, 0x3f, 0xe3, 0x55, 0x95, 0xa6, 0x52, 0x07, 0x11, 0xd5, 0xe8, 0xb6, 0x7b, 0xb5, 0x63, 0xa7,
	0xdf, 0x31, 0x96, 0x37, 0x54, 0x23, 0xd9, 0x85, 0x36, 0xf2, 0x28, 0x01, 0x3b, 0x06, 0x6c, 0x21,
	0x8f, 0x0c, 0x74, 0x04, 0x6b, 0x38, 0xa4, 0x6c, 0x10, 0xd0, 0x28, 0x92, 0xa8, 0x94, 0x0b, 0xc9,
	0x61, 0x8d, 0xf1, 0x55, 0x62, 0x23, 0x5f, 0xc3, 0xe6, 0x48, 0xb2, 0x21, 0x95, 0x0f, 0x81, 0xc6,
	0x01, 0x8e, 0x6e, 0x05, 0x47, 0xb7, 0x6b, 0x1c, 0x37, 0x2c, 0xf0, 0x2e, 0xb5, 0x93, 0x6f, 0x60,
	0x4b, 0x61, 0x28, 0x78, 0x94, 0x77, 0x5f, 0x35, 0xee, 0x64, 0x02, 0x4d, 0x03, 0x4e, 0x60, 0xcb,
	0x6e, 0x1e, 0x28, 0x2d, 0x11, 0xed, 0xe9, 0xd7, 0x4c, 0xc0, 0xa6, 0x85, 0x2e, 0x0d, 0x62, 0xae,
	0xe1, 0x47, 0x78, 0x9e, 0xfa, 0x5f, 0x8d, 0xd9, 0x20, 0x62, 0xfc, 0x26, 0xe0, 0xe3, 0xe1, 0x15,
	0x4a, 0xf7, 0x33, 0x13, 0xf3, 0xb9, 0x85, 0x5f, 0x5b, 0xf4, 0xad, 0x01, 0xb3, 0xfb, 0x8c, 0x84,
	0xd2, 0x74, 0x10, 0x84, 0x22, 0x42, 0x77, 0x3d, 0xb7, 0xcf, 0x85, 0x41, 0x4e, 0x45, 0x84, 0xe4,
	0x25, 0xac, 0xa6, 0xfe, 0x5a, 0xdc, 0x73, 0x77, 0xc3, 0x38, 0x76, 0xad, 0xed, 0x9d, 0xb8, 0xe7,
	0xe4, 0x07, 0xd8, 0x99, 0x52, 0xa7, 0x1a, 0x83, 0x91, 0x14, 0x77, 0x8c, 0x87, 0xe8, 0x6e, 0x1a,
	0xe7, 0xed, 0x09, 0x7b, 0xaa, 0xf1, 0xc2, 0x62, 0xe4, 0x5b, 0x48, 0xed, 0x41, 0x28, 0xc6, 0x5c,
	0xcb, 0x87, 0x84, 0x09, 0x49, 0xae, 0xc8, 0x62, 0xa7, 0x09, 0x14, 0x53, 0xf1, 0x77, 0x60, 0x3b,
	0x5f, 0xc6, 0x6a, 0x24, 0xb8, 0x42, 0x9f, 0xc3, 0xf3, 0x57, 0x63, 0x7d, 0x8b, 0x5c, 0xb3, 0x90,
	0x6a, 0x7c, 0x74, 0x89, 0x67, 0xab, 0x77, 0x65, 0x4e, 0xf5, 0x3a, 0xf9, 0xea, 0xf5, 0x3f, 0xd4,
	0xc0, 0x2d, 0x6e, 0x98, 0x90, 0x59, 0x7c, 0xc7, 0xbc, 0x26, 0x9c, 0xb9, 0x9a, 0xa8, 0xcf, 0x68,
	0xa2, 0x50, 0xbf, 0x8d, 0x62, 0xfd, 0xfa, 0xbf, 0xd7, 0xe1, 0xc5, 0xe9, 0x2d, 0xe5, 0x37, 0x78,
	0x2a, 0xb8, 0xa6, 0xa1, 0x3e, 0xe7, 0xd7, 0x42, 0x0e, 0x8d, 0x96, 0x97, 0xbe, 0xaf, 0x02, 0x03,
	0xe7, 0xb1, 0x0a, 0xaa, 0x3f, 0x4d, 0x41, 0x8d, 0xa7, 0x2a, 0xa8, 0xb9, 0x80, 0x82, 0x5a, 0x0b,
	0x28, 0xa8, 0xfd, 0x58, 0x05, 0x75, 0x9e, 0xa2, 0x20, 0x58, 0x40, 0x41, 0xdd, 0x4a, 0x05, 0xf9,
	0xd0, 0xab, 0xae, 0x00, 0xab, 0xa6, 0x07, 0xd8, 0x4d, 0x7c, 0xce, 0x32, 0xa9, 0xfb, 0x24, 0xf5,
	0xe1, 0xef, 0x83, 0x57, 0xb6, 0xb5, 0x25, 0xf6, 0x47, 0x0d, 0x0e, 0x12, 0xf8, 0x62, 0xa6, 0x56,
	0x96, 0x66, 0x57, 0x5a, 0x98, 0x4e, 0x79, 0x61, 0xfa, 0x3d, 0x38, 0xac, 0xa2, 0x61, 0x99, 0xfe,
	0x59, 0x4b, 0x95, 0x76, 0x59, 0x28, 0xd3, 0xa5, 0xb9, 0x56, 0xe8, 0xc2, 0xa9, 0xd2, 0xc5, 0x34,
	0xe9, 0x65, 0x64, 0x2c, 0xe3, 0x7f, 0x57, 0xd2, 0xab, 0x4f, 0x0a, 0xf7, 0xff, 0x4a, 0x7b, 0x85,
	0x26, 0x9d, 0x05, 0x34, 0x59, 0x5f, 0x40, 0x93, 0x8d, 0xc7, 0x6a, 0xb2, 0xf9, 0x14, 0x4d, 0xb6,
	0x16, 0xd0, 0x64, 0xbb, 0x52, 0x93, 0x07, 0xb0, 0x57, 0x7a, 0xf3, 0x36, 0x33, 0x7f, 0xd7, 0x52,
	0x3d, 0xc6, 0x6d, 0xe6, 0xc2, 0xf6, 0xa0, 0xa5, 0x13, 0xf3, 0x15, 0x6c, 0x84, 0x63, 0x29, 0x91,
	0xeb, 0x60, 0xa6, 0xcf, 0xad, 0x5b, 0x7b, 0xba, 0x95, 0x71, 0x35, 0x04, 0xa2, 0x60, 0x66, 0xa0,
	0x5b, 0xb7, 0xf6, 0xd4, 0x75, 0x2a, 0xe0, 0x3c, 0x57, 0x7b, 0x94, 0xbf, 0x26, 0x02, 0x36, 0x30,
	0x4a, 0x25, 0x38, 0x1d, 0xc4, 0x79, 0x5f, 0xfa, 0x38, 0x4b, 0x34, 0xcf, 0xa9, 0x9e, 0x8b, 0xac,
	0xa6, 0x39, 0xd8, 0x7b, 0x83, 0xd7, 0x8c, 0x1b, 0x97, 0x33, 0x33, 0x6e, 0x0e, 0x91, 0xeb, 0xa5,
	0x69, 0x67, 0x66, 0x59, 0x67, 0xde, 0x2c, 0x5b, 0x9f, 0x37, 0xcb, 0x36, 0x72, 0xb3, 0xac, 0x7f,
	0x08, 0xfb, 0xe5, 0x5c, 0x93, 0xc3, 0x7c, 0xf7, 0xa1, 0x05, 0xdd, 0x18, 0xba, 0x44, 0x79, 0xc7,
	0x42, 0x24, 0x67, 0xb0, 0x9a, 0x9d, 0xaa, 0x88, 0x7b, 0xc2, 0xe8, 0xf0, 0xa4, 0xe4, 0x7f, 0xc1,
	0xdb, 0x2d, 0x41, 0xec, 0x0d, 0x3d, 0x23, 0x3f, 0xc1, 0xc6, 0xec, 0x4c, 0x44, 0xf6, 0x4d, 0x40,
	0xc5, 0x6c, 0xe6, 0x1d, 0x54, 0xa0, 0x93, 0x25, 0x19, 0xb8, 0x55, 0xdd, 0x8a, 0x7c, 0x61, 0x82,
	0x3f, 0x32, 0xce, 0x78, 0x5f, 0x7e, 0xc4, 0x6b, 0xb2, 0xd5, 0x2f, 0x40, 0x8a, 0x9d, 0x87, 0x1c,
	0x66, 0xc2, 0x4b, 0xba, 0xa1, 0xf7, 0xa2, 0x12, 0x9f, 0x2c, 0xfc, 0x1e, 0xb6, 0x4a, 0xd4, 0x4d,
	0xb2, 0x91, 0x65, 0x2f, 0xae, 0xd7, 0xab, 0x76, 0x98, 0xac, 0x1d, 0xc2, 0x4e, 0x79, 0x23, 0x22,
	0x7e, 0x36, 0xba, 0xbc, 0x59, 0x7a, 0x47, 0x73, 0x7d, 0x8a, 0x49, 0x28, 0x76, 0x8f, 0x5c, 0x12,
	0x2a, 0x3b, 0x5d, 0x2e, 0x09, 0x73, 0x5a, 0x50, 0x26, 0x09, 0xd9, 0xd7, 0x23, 0x97, 0x84, 0x92,
	0x27, 0x30, 0x97, 0x84, 0xd2, 0x67, 0x27, 0x73, 0x51, 0xb3, 0x0a, 0xcf, 0x5d, 0x54, 0xc5, 0xa3,
	0x94, 0xbb, 0xa8, 0xca, 0x27, 0xe2, 0x19, 0xf9, 0x15, 0xb6, 0xcb, 0x74, 0x47, 0x92, 0x4c, 0xce,
	0x79, 0x3e, 0xbc, 0x97, 0x73, 0x3c, 0xd2, 0xe5, 0x5f, 0x37, 0xdf, 0xd7, 0x6f, 0xe4, 0x28, 0xbc,
	0x6a, 0x9a, 0x1f, 0xfb, 0xef, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x7a, 0xe0, 0x98, 0xe7,
	0x0f, 0x00, 0x00,
}
